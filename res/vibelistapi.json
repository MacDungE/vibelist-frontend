{
  "openapi": "3.1.0",
  "info": {
    "title": "VibeList API",
    "description": "VibeList 백엔드 API 문서",
    "contact": { "name": "VibeList Team", "email": "contact@vibelist.com" },
    "license": { "name": "MIT License", "url": "https://opensource.org/licenses/MIT" },
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:8080", "description": "개발 서버" },
    { "url": "https://api.vibelist.com", "description": "운영 서버" }
  ],
  "security": [{ "bearer-key": [], "access-cookie": [], "cookie-auth": [] }],
  "tags": [
    { "name": "Explore", "description": "검색 및 트렌드 피드 API" },
    { "name": "인증 관리", "description": "사용자 인증 및 권한 관리 API" },
    { "name": "시스템 상태", "description": "애플리케이션 상태 확인 API" },
    { "name": "SSO 관리", "description": "외부 앱을 위한 SSO API" },
    { "name": "댓글 관리", "description": "댓글 API" },
    { "name": "사용자 관리", "description": "사용자 정보 및 프로필 관리 API" },
    {
      "name": "외부 서비스 연동",
      "description": "Spotify, Google Music 등 외부 서비스 연동 관리 API"
    }
  ],
  "paths": {
    "/v1/users/{userId}/profile": {
      "put": {
        "tags": ["사용자 관리"],
        "summary": "사용자 프로필 업데이트",
        "description": "특정 사용자의 프로필을 업데이트합니다. (관리자용)",
        "operationId": "updateUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "업데이트할 사용자 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserProfileRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "프로필 업데이트 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/users/me/profile": {
      "put": {
        "tags": ["사용자 관리"],
        "summary": "현재 사용자 프로필 업데이트",
        "description": "현재 인증된 사용자의 프로필을 업데이트합니다.",
        "operationId": "updateCurrentUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserProfileRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "프로필 업데이트 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/comments/{id}": {
      "put": {
        "tags": ["댓글 관리"],
        "summary": "댓글 수정",
        "description": "댓글 내용을 수정합니다.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/CustomUserDetails" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CommentUpdateDto" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "댓글 수정 성공" },
          "403": { "description": "댓글 작성자가 아님" },
          "404": { "description": "댓글을 찾을 수 없음" }
        }
      },
      "delete": {
        "tags": ["댓글 관리"],
        "summary": "댓글 삭제",
        "description": "댓글을 삭제합니다.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/CustomUserDetails" }
          }
        ],
        "responses": {
          "204": { "description": "댓글 삭제 성공" },
          "403": { "description": "댓글 작성자가 아님" },
          "404": { "description": "댓글을 찾을 수 없음" }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": ["사용자 관리"],
        "summary": "사용자 목록 조회",
        "description": "모든 사용자의 목록을 조회합니다. (관리자용)",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "사용자 목록 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      },
      "post": {
        "tags": ["사용자 관리"],
        "summary": "사용자 생성",
        "description": "새로운 사용자와 프로필을 생성합니다.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateUserRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "사용자 생성 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "400": {
            "description": "잘못된 요청 (중복된 사용자명 등)",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/sso/refresh": {
      "post": {
        "tags": ["SSO 관리"],
        "summary": "토큰 갱신",
        "description": "리프레시 토큰을 사용하여 액세스 토큰을 갱신합니다.",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "cookie",
            "description": "리프레시 토큰 (쿠키)",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "토큰 갱신 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "리프레시 토큰이 유효하지 않음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/sso/logout": {
      "post": {
        "tags": ["SSO 관리"],
        "summary": "로그아웃",
        "description": "사용자를 로그아웃하고 모든 인증 쿠키를 삭제합니다.",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "로그아웃 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/sso/claim-tokens": {
      "get": {
        "tags": ["SSO 관리"],
        "summary": "토큰 클레임 (GET)",
        "description": "임시 토큰을 사용하여 실제 JWT 토큰을 HttpOnly 쿠키로 설정합니다. (호환성용)",
        "operationId": "claimTokensGet",
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "description": "임시 토큰 ID",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "object" } } } }
        }
      },
      "post": {
        "tags": ["SSO 관리"],
        "summary": "토큰 클레임 (POST)",
        "description": "임시 토큰을 사용하여 실제 JWT 토큰을 HttpOnly 쿠키로 설정합니다. (권장)",
        "operationId": "claimTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { "type": "string" },
                "description": "토큰 클레임 요청"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "토큰 클레임 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "400": {
            "description": "유효하지 않은 임시 토큰",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/sso/admin/cleanup-tokens": {
      "post": {
        "tags": ["SSO 관리"],
        "summary": "임시 토큰 수동 정리",
        "description": "모든 임시 토큰을 수동으로 정리합니다. (개발환경에서만)",
        "operationId": "cleanupAllTokens",
        "responses": {
          "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "object" } } } }
        }
      }
    },
    "/v1/recommend": {
      "post": {
        "tags": ["recommend-controller"],
        "summary": "감정 기반 트랙 추천",
        "description": "사용자의 감정 정보를 바탕으로 트랙을 추천합니다. valence/energy 직접 입력하거나 자연어 감정 설명을 입력할 수 있습니다. (둘 중 하나만 입력해도 추천이 동작합니다.)",
        "operationId": "recommend",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RecommendRqDto" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "추천 결과",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/TrackRsDto" } }
            }
          },
          "400": { "description": "잘못된 요청 파라미터" }
        }
      }
    },
    "/v1/post": {
      "post": {
        "tags": ["post-controller"],
        "summary": "게시글 + 플레이리스트 생성",
        "description": "트랙 리스트를 포함한 게시글을 작성합니다.",
        "operationId": "createPost",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PostCreateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 게시글 ID",
            "content": {
              "application/json": { "schema": { "type": "integer", "format": "int64" } }
            }
          },
          "400": { "description": "잘못된 요청" }
        },
        "security": [{ "bearer-key": [] }, { "access-cookie": [] }, { "cookie-auth": [] }]
      }
    },
    "/v1/playlist/add": {
      "post": {
        "tags": ["Spotify Playlist 삽입"],
        "summary": "Spotify에 Playlist 삽입",
        "description": "유저가 선택한 Playlist를 Spotify에 삽입합니다. 개발자가 최초에 로그인을 하지 않았다면, login-dev 호출이 필요합니다.",
        "operationId": "addPlaylist",
        "requestBody": {
          "description": "추가할 트랙들(TrackRsDto)의 리스트",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TrackRsDto" },
              "example": [
                {
                  "spotifyId": "1NZP1K2kgSAgnMRy9HEXVg",
                  "durationMs": 112882,
                  "trackId": "7816",
                  "title": "Liberator (Live)",
                  "artist": "Spear Of Destiny",
                  "album": "Best of Spear of Destiny (Live at the Forum)",
                  "popularity": 1,
                  "explicit": false,
                  "imageUrl": "https://i.scdn.co/image/ab67616d0000b27328a6b3a33210343626f9eca3"
                },
                {
                  "spotifyId": "1JblQH4F1xPaXT4SbsWn6F",
                  "durationMs": 172207,
                  "trackId": "11925",
                  "title": "Atlas",
                  "artist": "Ceano",
                  "album": "Atlas",
                  "popularity": 0,
                  "explicit": false,
                  "imageUrl": "https://i.scdn.co/image/ab67616d0000b27387193f2bedc67ee4eaf68448"
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "성공적으로 Playlist가 생성되고, Track 리스트가 응답됩니다.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TrackRsDto" },
                "examples": {
                  "샘플 응답": {
                    "summary": "Playlist 생성 후 반환된 Track 리스트 예시",
                    "description": "샘플 응답",
                    "value": [
                      {
                        "spotifyId": "1NZP1K2kgSAgnMRy9HEXVg",
                        "durationMs": 112882,
                        "trackId": "7816",
                        "title": "Liberator (Live)",
                        "artist": "Spear Of Destiny",
                        "album": "Best of Spear of Destiny (Live at the Forum)",
                        "popularity": 1,
                        "explicit": false,
                        "imageUrl": "https://i.scdn.co/image/ab67616d0000b27328a6b3a33210343626f9eca3"
                      },
                      {
                        "spotifyId": "1JblQH4F1xPaXT4SbsWn6F",
                        "durationMs": 172207,
                        "trackId": "11925",
                        "title": "Atlas",
                        "artist": "Ceano",
                        "album": "Atlas",
                        "popularity": 0,
                        "explicit": false,
                        "imageUrl": "https://i.scdn.co/image/ab67616d0000b27387193f2bedc67ee4eaf68448"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": { "description": "사용자 또는 개발자 로그인 필요" },
          "400": { "description": "잘못된 요청 데이터" }
        }
      }
    },
    "/v1/elasticsearch/insert": {
      "post": {
        "tags": ["test-es-controller"],
        "operationId": "insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "type": "array", "items": { "$ref": "#/components/schemas/TestEsDoc" } }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "object" } } } }
        }
      }
    },
    "/v1/comments": {
      "get": {
        "tags": ["댓글 관리"],
        "summary": "댓글 조회",
        "description": "현재 게시글의 댓글을 정렬 기준에 따라 조회합니다.",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "latest" }
          }
        ],
        "responses": {
          "200": {
            "description": "댓글 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CommentResponseDto" }
                }
              }
            }
          },
          "404": {
            "description": "게시글을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CommentResponseDto" }
                }
              }
            }
          },
          "400": {
            "description": "잘못된 정렬 기준",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CommentResponseDto" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["댓글 관리"],
        "summary": "댓글 생성",
        "description": "새로운 댓글을 등록합니다.",
        "operationId": "create",
        "parameters": [
          {
            "name": "details",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/CustomUserDetails" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CommentCreateDto" } }
          },
          "required": true
        },
        "responses": {
          "201": { "description": "댓글 생성 성공" },
          "400": { "description": "잘못된 요청" }
        }
      }
    },
    "/v1/auth/social/complete-signup": {
      "post": {
        "tags": ["인증 관리"],
        "summary": "소셜 회원가입 완료",
        "description": "소셜 로그인 후 사용자명을 설정하여 회원가입을 완료합니다.",
        "operationId": "completeSocialSignup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CompleteSocialSignupRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "회원가입 완료 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "400": {
            "description": "잘못된 요청 (중복된 사용자명 등)",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "tags": ["인증 관리"],
        "summary": "토큰 갱신",
        "description": "리프레시 토큰을 사용해 새로운 액세스 토큰을 발급받습니다.",
        "operationId": "refreshToken_1",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "cookie",
            "description": "리프레시 토큰 (쿠키)",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "토큰 갱신 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "리프레시 토큰이 없거나 유효하지 않음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "tags": ["인증 관리"],
        "summary": "로그아웃",
        "description": "사용자를 로그아웃하고 토큰을 무효화합니다.",
        "operationId": "logout_1",
        "responses": {
          "200": {
            "description": "로그아웃 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/post/{id}": {
      "get": {
        "tags": ["post-controller"],
        "summary": "게시글 상세 조회",
        "description": "게시글과 연결된 플레이리스트 및 트랙 정보를 반환합니다.",
        "operationId": "getPostDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/PostDetailResponse" } }
            }
          }
        },
        "security": [{ "bearer-key": [] }, { "access-cookie": [] }, { "cookie-auth": [] }]
      },
      "delete": {
        "tags": ["post-controller"],
        "summary": "게시글 삭제",
        "description": "게시글을 소프트 삭제합니다.",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "204": { "description": "삭제 성공" },
          "403": { "description": "삭제 권한 없음" }
        },
        "security": [{ "bearer-key": [] }, { "access-cookie": [] }, { "cookie-auth": [] }]
      },
      "patch": {
        "tags": ["post-controller"],
        "summary": "게시글 수정",
        "description": "게시글 내용과 공개 여부를 수정합니다.",
        "operationId": "updatePost",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PostUpdateRequest" } }
          },
          "required": true
        },
        "responses": {
          "204": { "description": "수정 성공" },
          "403": { "description": "수정 권한 없음" }
        },
        "security": [{ "bearer-key": [] }, { "access-cookie": [] }, { "cookie-auth": [] }]
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "tags": ["사용자 관리"],
        "summary": "사용자 정보 조회",
        "description": "특정 사용자의 정보를 조회합니다. (관리자용)",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "조회할 사용자 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "사용자 정보 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      },
      "delete": {
        "tags": ["사용자 관리"],
        "summary": "사용자 삭제",
        "description": "특정 사용자를 삭제합니다. (관리자용)",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "삭제할 사용자 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "사용자 삭제 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/users/search": {
      "get": {
        "tags": ["사용자 관리"],
        "summary": "사용자 검색",
        "description": "이름으로 사용자를 검색합니다.",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "검색할 사용자 이름",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "사용자 검색 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": ["사용자 관리"],
        "summary": "현재 사용자 정보 조회",
        "description": "현재 인증된 사용자의 정보를 조회합니다.",
        "operationId": "getCurrentUserInfo",
        "responses": {
          "200": {
            "description": "사용자 정보 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      },
      "delete": {
        "tags": ["사용자 관리"],
        "summary": "현재 사용자 삭제",
        "description": "현재 인증된 사용자를 삭제합니다.",
        "operationId": "deleteCurrentUser",
        "responses": {
          "200": {
            "description": "사용자 삭제 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/sso/status": {
      "get": {
        "tags": ["SSO 관리"],
        "summary": "인증 상태 확인",
        "description": "현재 사용자의 인증 상태를 확인합니다.",
        "operationId": "getSSOStatus",
        "responses": {
          "200": {
            "description": "인증 상태 조회 성공",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/SSOStatusResponse" } } }
          }
        }
      }
    },
    "/v1/sso/login-urls": {
      "get": {
        "tags": ["SSO 관리"],
        "summary": "소셜 로그인 URL 목록 조회",
        "description": "React 앱에서 사용할 소셜 로그인 URL 목록을 제공합니다.",
        "operationId": "getLoginUrls",
        "parameters": [
          {
            "name": "redirectUrl",
            "in": "query",
            "description": "리다이렉트 URL",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "object", "additionalProperties": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/v1/sso/health": {
      "get": {
        "tags": ["SSO 관리"],
        "summary": "SSO 헬스체크",
        "description": "SSO 컨트롤러가 정상 작동하는지 확인합니다.",
        "operationId": "health",
        "responses": {
          "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "object" } } } }
        }
      }
    },
    "/v1/sso/debug/tokens": {
      "get": {
        "tags": ["SSO 관리"],
        "summary": "임시 토큰 디버그 정보",
        "description": "현재 저장된 임시 토큰 정보를 조회합니다. (개발환경에서만)",
        "operationId": "debugTokens",
        "responses": {
          "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "object" } } } }
        }
      }
    },
    "/v1/sso/callback": {
      "get": {
        "tags": ["SSO 관리"],
        "summary": "OAuth2 콜백 처리",
        "description": "OAuth2 인증 후 콜백을 처리하고 적절한 페이지로 리다이렉트합니다.",
        "operationId": "handleCallback",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "인증 상태",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "provider",
            "in": "query",
            "description": "인증 제공자",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "error",
            "in": "query",
            "description": "에러 메시지",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/v1/post/likes": {
      "get": {
        "tags": ["post-controller"],
        "summary": "사용자가 좋아요한 게시글 목록 조회",
        "description": "현재 인증된 사용자가 좋아요한 게시글(+플레이리스트)을 최신순으로 반환합니다.",
        "operationId": "getLikedPostsByUser",
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PostDetailResponse" }
                }
              }
            }
          },
          "401": { "description": "인증 필요" }
        },
        "security": [{ "bearer-key": [] }, { "access-cookie": [] }, { "cookie-auth": [] }]
      }
    },
    "/v1/integrations/{provider}": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "제공자별 토큰 정보 조회",
        "description": "특정 제공자의 토큰 정보를 조회합니다.",
        "operationId": "getProviderIntegration",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "서비스 제공자 (spotify, google 등)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "토큰 정보 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "토큰을 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      },
      "delete": {
        "tags": ["외부 서비스 연동"],
        "summary": "연동 해제",
        "description": "특정 제공자의 연동을 해제하고 토큰을 비활성화합니다.",
        "operationId": "disconnectProvider",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "연동 해제할 서비스 제공자",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "연동 해제 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/{provider}/valid": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "유효한 토큰 정보 조회",
        "description": "특정 제공자의 유효한 토큰 정보를 조회합니다. (만료되지 않은 토큰만)",
        "operationId": "getValidProviderIntegration",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "서비스 제공자 (spotify, google 등)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "유효한 토큰 정보 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "유효한 토큰을 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/{provider}/exists": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "토큰 존재 여부 확인",
        "description": "특정 제공자의 토큰 존재 여부를 확인합니다.",
        "operationId": "checkProviderIntegrationExists",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "확인할 서비스 제공자",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "토큰 존재 여부 확인 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/status": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "연동 상태 조회",
        "description": "현재 사용자의 모든 외부 서비스 연동 상태를 조회합니다.",
        "operationId": "getCurrentUserIntegrationStatus",
        "responses": {
          "200": {
            "description": "연동 상태 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/spotify/token-debug": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "스포티파이 토큰 디버그 정보",
        "description": "스포티파이 토큰이 정상적으로 저장되었는지 확인합니다. (개발용)",
        "operationId": "getSpotifyTokenDebugInfo",
        "responses": {
          "200": {
            "description": "토큰 정보 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "스포티파이 토큰 정보 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/spotify/connect": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "스포티파이 연동 시작",
        "description": "인증된 사용자가 스포티파이 연동을 시작합니다. 스포티파이 OAuth2 인증 페이지로 리다이렉트합니다.",
        "operationId": "connectSpotify",
        "responses": {
          "302": { "description": "스포티파이 OAuth2 인증 페이지로 리다이렉트" },
          "400": { "description": "이미 연동된 경우" },
          "401": { "description": "인증되지 않은 사용자" }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/providers": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "연동된 제공자 목록",
        "description": "연동된 제공자 목록을 간단한 형태로 조회합니다.",
        "operationId": "getConnectedProviders",
        "responses": {
          "200": {
            "description": "제공자 목록 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/integrations/by-scope": {
      "get": {
        "tags": ["외부 서비스 연동"],
        "summary": "권한별 연동 조회",
        "description": "특정 권한(scope)을 가진 연동을 조회합니다.",
        "operationId": "getIntegrationsByScope",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "조회할 권한 스코프",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "권한별 연동 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/explore/trend": {
      "get": {
        "tags": ["Explore"],
        "summary": "트렌드 조회",
        "description": "현재 인기 있는 트렌드를 조회합니다.",
        "operationId": "getTrends",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "최대 조회 개수",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "트렌드 키워드 목록을 반환합니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TrendResponse" }
                }
              }
            }
          }
        }
      }
    },
    "/v1/explore/search": {
      "get": {
        "tags": ["Explore"],
        "summary": "게시글 검색",
        "description": "키워드를 기반으로 게시글을 검색합니다.",
        "operationId": "search",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "검색 키워드",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "검색된 게시글 목록을 반환합니다.",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/PagePostDetailResponse" } }
            }
          }
        }
      }
    },
    "/v1/explore/feed": {
      "get": {
        "tags": ["Explore"],
        "summary": "피드 조회",
        "description": "추천 게시글 피드를 조회합니다.",
        "operationId": "feed",
        "responses": {
          "200": {
            "description": "추천 피드 게시글 목록을 반환합니다.",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/PagePostDetailResponse" } }
            }
          }
        }
      }
    },
    "/v1/auth/{userId}/social": {
      "get": {
        "tags": ["인증 관리"],
        "summary": "사용자 소셜 계정 조회",
        "description": "특정 사용자의 소셜 로그인 연동 정보를 조회합니다. (관리자용)",
        "operationId": "getUserSocialAccounts",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "조회할 사용자 ID",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "소셜 계정 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/v1/auth/status": {
      "get": {
        "tags": ["인증 관리"],
        "summary": "인증 상태 확인",
        "description": "현재 사용자의 인증 상태와 정보를 확인합니다.",
        "operationId": "getAuthStatus",
        "responses": {
          "200": {
            "description": "인증 상태 조회 성공",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          }
        }
      }
    },
    "/v1/auth/social-login-urls": {
      "get": {
        "tags": ["인증 관리"],
        "summary": "소셜 로그인 URL 조회",
        "description": "Google, Kakao, Spotify 등 소셜 로그인 URL을 제공합니다.",
        "operationId": "getLoginUrls_1",
        "responses": {
          "200": {
            "description": "로그인 URL 조회 성공",
            "content": {
              "*/*": {
                "schema": { "type": "object", "additionalProperties": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/v1/auth/me/social": {
      "get": {
        "tags": ["인증 관리"],
        "summary": "현재 사용자 소셜 계정 조회",
        "description": "현재 인증된 사용자의 소셜 로그인 연동 정보를 조회합니다.",
        "operationId": "getCurrentUserSocialAccounts",
        "responses": {
          "200": {
            "description": "소셜 계정 조회 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "404": {
            "description": "사용자를 찾을 수 없음",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    },
    "/health": {
      "get": {
        "tags": ["시스템 상태"],
        "summary": "서버 상태 확인",
        "description": "서버의 현재 상태와 정보를 확인합니다.",
        "operationId": "health_1",
        "responses": {
          "200": {
            "description": "서버 정상 작동 중",
            "content": { "*/*": { "schema": { "type": "object", "additionalProperties": {} } } }
          }
        }
      }
    },
    "/v1/integrations/all": {
      "delete": {
        "tags": ["외부 서비스 연동"],
        "summary": "모든 연동 해제",
        "description": "모든 외부 서비스 연동을 해제하고 토큰을 비활성화합니다.",
        "operationId": "disconnectAllProviders",
        "responses": {
          "200": {
            "description": "모든 연동 해제 성공",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "401": {
            "description": "인증되지 않은 사용자",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearer-key": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateUserProfileRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "phone": { "type": "string" },
          "avatarUrl": { "type": "string" },
          "bio": { "type": "string" }
        }
      },
      "CommentUpdateDto": { "type": "object", "properties": { "content": { "type": "string" } } },
      "CustomUserDetails": {
        "type": "object",
        "properties": {
          "enabled": { "type": "boolean" },
          "id": { "type": "integer", "format": "int64" },
          "password": { "type": "string" },
          "authorities": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GrantedAuthority" }
          },
          "username": { "type": "string" },
          "accountNonExpired": { "type": "boolean" },
          "accountNonLocked": { "type": "boolean" },
          "credentialsNonExpired": { "type": "boolean" }
        }
      },
      "GrantedAuthority": { "type": "object", "properties": { "authority": { "type": "string" } } },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" },
          "phone": { "type": "string" },
          "role": { "type": "string", "enum": ["USER", "ADMIN"] }
        }
      },
      "RecommendRqDto": {
        "type": "object",
        "properties": {
          "userValence": { "type": "number", "format": "double" },
          "userEnergy": { "type": "number", "format": "double" },
          "text": { "type": "string" },
          "mode": { "type": "string", "enum": ["MAINTAIN", "ELEVATE", "CALM_DOWN", "REVERSE"] }
        }
      },
      "TrackRsDto": {
        "type": "object",
        "properties": {
          "spotifyId": { "type": "string" },
          "durationMs": { "type": "integer", "format": "int32" },
          "trackId": { "type": "string" },
          "title": { "type": "string" },
          "artist": { "type": "string" },
          "album": { "type": "string" },
          "popularity": { "type": "integer", "format": "int32" },
          "explicit": { "type": "boolean" },
          "imageUrl": { "type": "string" }
        }
      },
      "PostCreateRequest": {
        "type": "object",
        "properties": {
          "tracks": { "type": "array", "items": { "$ref": "#/components/schemas/TrackRsDto" } },
          "content": { "type": "string" },
          "isPublic": { "type": "boolean" }
        }
      },
      "TestEsDoc": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "username": { "type": "string" }
        }
      },
      "CommentCreateDto": {
        "type": "object",
        "properties": {
          "postId": { "type": "integer", "format": "int64" },
          "content": { "type": "string" },
          "parentId": { "type": "integer", "format": "int64" }
        }
      },
      "CompleteSocialSignupRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "provider": { "type": "string" },
          "userId": { "type": "string" }
        }
      },
      "PostUpdateRequest": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "content": { "type": "string" },
          "isPublic": { "type": "boolean" }
        }
      },
      "SSOStatusResponse": {
        "type": "object",
        "properties": {
          "authenticated": { "type": "boolean" },
          "userId": { "type": "integer", "format": "int64" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" },
          "provider": { "type": "string" },
          "checkedAt": { "type": "string", "format": "date-time" }
        }
      },
      "PlaylistDetailResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "spotifyUrl": { "type": "string" },
          "totalTracks": { "type": "integer", "format": "int32" },
          "totalLengthSec": { "type": "integer", "format": "int32" },
          "tracks": { "type": "array", "items": { "$ref": "#/components/schemas/TrackRsDto" } }
        }
      },
      "PostDetailResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" },
          "userName": { "type": "string" },
          "userProfileName": { "type": "string" },
          "content": { "type": "string" },
          "isPublic": { "type": "boolean" },
          "likeCnt": { "type": "integer", "format": "int64" },
          "viewCnt": { "type": "integer", "format": "int64" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "playlist": { "$ref": "#/components/schemas/PlaylistDetailResponse" }
        }
      },
      "TrendResponse": {
        "type": "object",
        "properties": {
          "postId": { "type": "integer", "format": "int64" },
          "score": { "type": "number", "format": "double" },
          "rank": { "type": "integer", "format": "int32" },
          "previousRank": { "type": "integer", "format": "int32" },
          "trendStatus": { "type": "string", "enum": ["UP", "DOWN", "NEW", "SAME", "OUT"] },
          "rankChange": { "type": "integer", "format": "int32" },
          "postContent": { "type": "string" },
          "userName": { "type": "string" },
          "userProfileName": { "type": "string" },
          "snapshotTime": { "type": "string", "format": "date-time" }
        }
      },
      "PagePostDetailResponse": {
        "type": "object",
        "properties": {
          "totalPages": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int64" },
          "size": { "type": "integer", "format": "int32" },
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PostDetailResponse" }
          },
          "number": { "type": "integer", "format": "int32" },
          "sort": { "$ref": "#/components/schemas/SortObject" },
          "first": { "type": "boolean" },
          "last": { "type": "boolean" },
          "pageable": { "$ref": "#/components/schemas/PageableObject" },
          "numberOfElements": { "type": "integer", "format": "int32" },
          "empty": { "type": "boolean" }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int64" },
          "sort": { "$ref": "#/components/schemas/SortObject" },
          "unpaged": { "type": "boolean" },
          "paged": { "type": "boolean" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "pageSize": { "type": "integer", "format": "int32" }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": { "type": "boolean" },
          "unsorted": { "type": "boolean" },
          "sorted": { "type": "boolean" }
        }
      },
      "CommentResponseDto": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "content": { "type": "string" },
          "userId": { "type": "integer", "format": "int64" },
          "username": { "type": "string" },
          "userProfileName": { "type": "string" },
          "parentId": { "type": "integer", "format": "int64" },
          "createdAt": { "type": "string", "format": "date-time" },
          "likeCount": { "type": "integer", "format": "int32" }
        }
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "authenticated": { "type": "boolean" },
          "provider": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearer-key": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "access-cookie": { "type": "apiKey", "name": "accessToken", "in": "cookie" },
      "cookie-auth": { "type": "apiKey", "name": "refreshToken", "in": "cookie" }
    }
  }
}
